Создание И Восстановление Резервных Копий MongoDB.
Резервное Копирование
Чтобы создать резервную копию данных, содержащихся в вашей базе данных, создайте файл дампа с помощью инструмента mongodump .

mongodump --authenticationDatabase admin --username root --password PASSWORD -d DATABASE_NAME -h localhost
Эта операция может занять некоторое время в зависимости от объема данных, хранящихся в базе данных.

Восстановить
Чтобы восстановить данные, резервные копии которых были созданы с помощью предыдущей команды, восстановите файл дампа с помощью инструмента monorestore .

mongorestore --authenticationDatabase admin --username root --password PASSWORD PATH_TO_BACKUP_FILE
Обратите внимание, что описанные выше шаги будут выполнять резервное копирование только данных, содержащихся в вашей базе данных. 
Могут существовать и другие файлы, которые следует учитывать при выполнении полного резервного копирования, например файлы, которые могли быть загружены в приложение. 
Эти файлы хранятся в самой папке приложения, поэтому скопируйте эту папку, чтобы иметь резервную копию загруженных файлов.

Шаг 3. Запустите экземпляр клиента MongoDB®.
Наконец, мы создаем новый экземпляр контейнера для запуска клиента MongoDB® и подключения к серверу, созданному на предыдущем шаге:

docker run -it --rm \
    --network app-tier \
    bitnami/mongodb:latest mongo --host mongodb-server

Создание дампов базы данных
Большинство обычных инструментов будут работать, хотя в некоторых случаях их использование может быть немного запутанным, чтобы обеспечить доступ к серверу mongod. Простой способ обеспечить это — использовать docker execи запускать инструмент из одного и того же контейнера, как показано ниже:

$ docker exec some-mongo sh -c 'exec mongodump -d <database_name> --archive' > /some/path/on/your/host/all-collections.archive



https://subscription.packtpub.com/book/data/9781787126480/1/ch01lvl1sec16/separating-directories-per-database
